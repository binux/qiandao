// Generated by CoffeeScript 1.7.1
(function() {
  define(function(require, exports, module) {
    var cookie_input, editor;
    require('/static/har/contenteditable');
    require('/static/har/upload_ctrl');
    require('/static/har/entry_list');
    require('/static/har/entry_editor');
    $(document).on('click', '.contentedit-wrapper', function(ev) {
      var editable;
      return editable = $(this).hide().next('[contenteditable]').show().focus();
    });
    $(document).on('blur', '.contentedit-wrapper + [contenteditable]', function(ev) {
      return $(this).hide().prev('.contentedit-wrapper').show();
    });
    $(document).on('focus', '[contenteditable]', function(ev) {
      var range, sel;
      if (this.childNodes[0]) {
        range = document.createRange();
        sel = window.getSelection();
        range.setStartBefore(this.childNodes[0]);
        range.setEndAfter(this);
        sel.removeAllRanges();
        return sel.addRange(range);
      }
    });
    $(function() {
      return $('[data-toggle=get-cookie][disabled]').attr('disabled', false);
    });
    cookie_input = null;
    $(document).on('click', "[data-toggle=get-cookie]", function(ev) {
      var $this;
      $this = $(this);
      if ($this.attr('disabled')) {
        return;
      }
      cookie_input = angular.element($this.parent().find('input'));
      if ($('body').attr('get-cookie') === void 0) {
        alert('尚未安装GetCookie插件，请安装插件或手动获取！');
        $this.attr('href', 'https://chrome.google.com/webstore/detail/cookies-get-assistant/ljjpkibacifkfolehlgaolibbnlapkme').attr('target', '_blank');
      }
    });
    window.addEventListener("message", function(ev) {
      var cookie, cookie_str, key, value;
      if (event.origin !== window.location.origin) {
        return;
      }
      cookie = ev.data;
      cookie_str = "";
      for (key in cookie) {
        value = cookie[key];
        cookie_str += key + '=' + value + '; ';
      }
      if (cookie_str === '') {
        alert('没有获得cookie，您是否已经登录？');
        return;
      }
      cookie_input.val(cookie_str);
      return cookie_input.scope().$parent["var"].value = cookie_str;
    });
    editor = angular.module('HAREditor', ['editablelist', 'upload_ctrl', 'entry_list', 'entry_editor']);
    return {
      init: function() {
        return angular.bootstrap(document.body, ['HAREditor']);
      }
    };
  });

}).call(this);
